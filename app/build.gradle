apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


androidExtensions {
    experimental = true
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

android {
    compileSdkVersion build_versions.compileSdk
    buildToolsVersion build_versions.buildTools
    defaultConfig {
        applicationId "com.king.easychat.clent"
        minSdkVersion build_versions.minSdk
        targetSdkVersion build_versions.targetSdk
        versionCode app_version.versionCode
        versionName app_version.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi-v7a"//, "arm64-v8a", "x86","x86_64"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    if (rootProject.ext.signingEnabled) {
        signingConfigs {
            config {
                //加载配置资源
                Properties properties = new Properties()
                InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
                properties.load(inputStream)

                //读取配置文件
                def storeFileDir = properties.getProperty('storeFile.file')
                storeFile file(storeFileDir)

                //读取配置字段
                def key_keyAlias = properties.getProperty('keyAlias')
                def key_keyPassword = properties.getProperty('keyPassword')
                def key_storePassword = properties.getProperty('storePassword')

                keyAlias key_keyAlias
                keyPassword key_keyPassword
                storePassword key_storePassword
            }

        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (rootProject.ext.signingEnabled) {
                signingConfig signingConfigs.config
            }
        }

        debug {
            debuggable true
            minifyEnabled false
        }
    }

    def API_RELEASE_HOST = "\"120.79.175.213\""
//    def API_DEV_HOST = "\"192.168.100.54\""
    def API_DEV_HOST = "\"120.79.175.213\""

    flavorDimensions "flavor"
    productFlavors {
        //正式
        flavors_release {
            dimension "flavor"
            //url动态替换,正式url
            buildConfigField("String", "API_HOST", "${API_RELEASE_HOST}")
        }
        //开发
        flavors_dev {
            dimension "flavor"
            //url动态替换
            buildConfigField("String", "API_HOST", "${API_DEV_HOST}")
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.core:core-ktx:$versions.coreKtx"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCore"

    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "androidx.viewpager2:viewpager2:$versions.viewpager2"

    debugImplementation "com.amitshekhar.android:debug-db:$versions.debugDb"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinxCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinxCoroutines"

    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-rxjava2:$versions.room"


    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    implementation "com.king.frame:mvvmframe:$versions.mvvmframe"

    implementation "com.king.thread:nevercrash:$versions.nevercrash"
    implementation "com.king.base:adapter:$versions.base"
    implementation "com.king.base:util:$versions.base"
    implementation "com.king.anetty:anetty:$versions.anetty"
    //app-updater
    implementation "com.king.app:app-updater:$versions.appUpdater"
    //app-dialog
    implementation "com.king.app:app-dialog:$versions.appUpdater"

    implementation "com.king.view:flutteringlayout:$versions.flutteringlayout"

    implementation "com.king.zxing:zxing-lite:$versions.zxingLite"

    implementation "com.king.base:base-url-manager:$versions.baseUrlManager"


    implementation "com.orhanobut:logger:$versions.logger"


    implementation "org.greenrobot:eventbus:$versions.eventbus"

    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$versions.brvah"

    implementation "de.hdodenhof:circleimageview:$versions.circleimageview"

    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    implementation "com.zhihu.android:matisse:$versions.matisse"

    implementation "top.zibin:Luban:$versions.Luban"

    implementation "com.github.yalantis:ucrop:$versions.ucrop"

    implementation "com.github.chrisbanes:PhotoView:$versions.PhotoView"

    implementation "com.github.tbruyelle:rxpermissions:$versions.rxpermissions"

    implementation "com.github.lzyzsd:jsbridge:$versions.jsbridge"

    implementation "com.tencent:mmkv:$versions.mmkv"

    // 远程依赖集成方式（推荐）
    implementation "com.tencent.bugly:crashreport_upgrade:$versions.bugly"
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation "com.tencent.tinker:tinker-android-lib:$versions.tinker"

    implementation 'com.qianwen:update-app:3.5.2'
    implementation 'com.qianwen:okhttp-utils:3.8.0'

}


if (rootProject.ext.tinkerEnabled) {
    apply from: 'tinker-support.gradle'
}
